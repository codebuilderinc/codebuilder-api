/* eslint-disable */
export default async () => {
    const t = {
        ["./jobs/dto/create-job.dto"]: await import("./jobs/dto/create-job.dto"),
        ["./jobs/dto/job-order-by.dto"]: await import("./jobs/dto/job-order-by.dto"),
        ["./users/models/user.model"]: await import("./users/models/user.model"),
        ["./jobs/models/job.model"]: await import("./jobs/models/job.model")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./jobs/dto/create-job.dto"), { "JobMetadataDto": { name: { required: true, type: () => String }, value: { required: true, type: () => String } }, "JobSourceDto": { source: { required: true, type: () => String }, externalId: { required: false, type: () => String }, rawUrl: { required: false, type: () => String, format: "uri" }, data: { required: false, type: () => Object } }, "CreateJobDto": { title: { required: true, type: () => String, minLength: 1, maxLength: 255 }, companyId: { required: false, type: () => Number }, companyName: { required: false, type: () => String, minLength: 1, maxLength: 255 }, author: { required: false, type: () => String, minLength: 1, maxLength: 255 }, location: { required: false, type: () => String, minLength: 1, maxLength: 255 }, url: { required: true, type: () => String, format: "uri" }, postedAt: { required: false, type: () => String }, description: { required: false, type: () => String }, isRemote: { required: false, type: () => Boolean }, tags: { required: false, type: () => [String] }, metadata: { required: false, type: () => [t["./jobs/dto/create-job.dto"].JobMetadataDto] }, sources: { required: false, type: () => [t["./jobs/dto/create-job.dto"].JobSourceDto] } } }], [import("./jobs/dto/update-job.dto"), { "UpdateJobDto": { title: { required: false, type: () => String, minLength: 1, maxLength: 255 }, companyId: { required: false, type: () => Number }, companyName: { required: false, type: () => String, minLength: 1, maxLength: 255 }, author: { required: false, type: () => String, minLength: 1, maxLength: 255 }, location: { required: false, type: () => String, minLength: 1, maxLength: 255 }, url: { required: false, type: () => String, format: "uri" }, postedAt: { required: false, type: () => String }, description: { required: false, type: () => String }, isRemote: { required: false, type: () => Boolean }, tags: { required: false, type: () => [String] }, metadata: { required: false, type: () => [t["./jobs/dto/create-job.dto"].JobMetadataDto] } } }], [import("./jobs/dto/job-order-by.dto"), { "JobOrderByDto": { createdAt: { required: false, enum: t["./jobs/dto/job-order-by.dto"].SortOrder }, updatedAt: { required: false, enum: t["./jobs/dto/job-order-by.dto"].SortOrder }, postedAt: { required: false, enum: t["./jobs/dto/job-order-by.dto"].SortOrder }, title: { required: false, enum: t["./jobs/dto/job-order-by.dto"].SortOrder }, company: { required: false, enum: t["./jobs/dto/job-order-by.dto"].SortOrder } } }], [import("./users/dto/user.dto"), { "UserDTO": { name: { required: true, type: () => String, minLength: 1 }, image: { required: true, type: () => String, format: "uri" } }, "UpdateUserDTO": { description: { required: true, type: () => String, minLength: 3, maxLength: 255 }, profileImageUrl: { required: true, type: () => String, format: "uri", pattern: "nyc3.digitaloceanspaces.com" }, bannerImageUrl: { required: true, type: () => String, format: "uri", pattern: "nyc3.digitaloceanspaces.com" }, twitter: { required: true, type: () => String, minLength: 1, maxLength: 50 } }, "RegisterUserDTO": { email: { required: true, type: () => String, format: "email" }, username: { required: true, type: () => String }, password: { required: true, type: () => String }, passwordConfirmation: { required: true, type: () => String } }, "LoginUserDTO": { username: { required: true, type: () => String }, password: { required: true, type: () => String } }, "RefreshTokenDTO": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } }, "RefreshTokenUpdateDTO": { isValid: { required: true, type: () => Boolean } }, "CheckUsernameDTO": { username: { required: true, type: () => String } }, "RegisterWalletDTO": { walletAddress: { required: true, type: () => String }, networkId: { required: true, type: () => String }, signature: { required: true, type: () => String } } }]], "controllers": [[import("./jobs/job.controller"), { "JobController": { "create": {}, "findAll": {}, "findOne": {}, "update": {}, "remove": {}, "findByCompany": {}, "findByTag": {} } }], [import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./users/user.controller"), { "UserController": { "walletTokenSell": { type: String } } }]] }, "@nestjs/graphql/plugin": { "models": [[import("./common/pagination/pagination.args"), { "PaginationArgs": { skip: { nullable: true, type: () => Number }, after: { nullable: true, type: () => String }, before: { nullable: true, type: () => String }, first: { nullable: true, type: () => Number }, last: { nullable: true, type: () => Number } } }], [import("./common/models/base.model"), { "BaseModel": { id: {}, createdAt: {}, updatedAt: {} } }], [import("./users/models/user.model"), { "User": { role: {} } }], [import("./jobs/models/company.model"), { "Company": { name: {}, jobs: { nullable: true } } }], [import("./jobs/models/job-tag.model"), { "JobTag": { jobId: {}, tagId: {} } }], [import("./jobs/models/job-metadata.model"), { "JobMetadata": { jobId: {}, name: {}, value: {}, job: {} } }], [import("./jobs/models/job-source.model"), { "JobSource": { jobId: {}, source: {}, externalId: { nullable: true }, rawUrl: { nullable: true }, data: { nullable: true }, job: {} } }], [import("./jobs/models/job.model"), { "Job": { title: {}, companyId: { nullable: true }, company: { nullable: true }, author: { nullable: true }, location: { nullable: true }, url: {}, postedAt: { nullable: true }, description: { nullable: true }, isRemote: { nullable: true }, tags: { nullable: true }, metadata: { nullable: true }, sources: { nullable: true } } }], [import("./jobs/args/job.args"), { "JobArgs": { orderBy: { nullable: true }, search: { nullable: true }, companyId: { nullable: true }, location: { nullable: true }, isRemote: { nullable: true }, tags: { nullable: true } } }], [import("./users/dto/change-password.input"), { "ChangePasswordInput": { oldPassword: {}, newPassword: {} } }], [import("./users/dto/update-user.input"), { "UpdateUserInput": { firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./jobs/models/tag.model"), { "Tag": { name: {}, jobTags: { nullable: true } } }], [import("./common/pagination/page-info.model"), { "PageInfo": { endCursor: { nullable: true }, hasNextPage: {}, hasPreviousPage: {}, startCursor: { nullable: true } } }], [import("./common/auth/dto/signup.input"), { "SignupInput": { email: {}, password: {}, firstname: { nullable: true }, lastname: { nullable: true } } }], [import("./common/auth/models/token.model"), { "Token": { accessToken: {}, refreshToken: {} } }], [import("./common/auth/models/auth.model"), { "Auth": { user: { type: () => t["./users/models/user.model"].User } } }], [import("./common/auth/dto/login.input"), { "LoginInput": { email: {}, password: {} } }], [import("./common/auth/dto/refresh-token.input"), { "RefreshTokenInput": { token: {} } }], [import("./jobs/models/job-connection.model"), { "JobConnection": { results: { type: () => [t["./jobs/models/job.model"].Job] }, hasNextPage: { type: () => Boolean }, cursor: { nullable: true, type: () => String }, items: {} } }]] } };
};